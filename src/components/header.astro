---
const nagivation = [
   { name: "Docs", url: "https://baselime.io/docs/" },
   { name: "About", to: "/about" },
   { name: "Blog", to: "/blog" },
   { name: "Changelog", to: "/changelog" },
   { name: "Pricing", to: "/pricing" },
   {
      name: "Community",
      url: "https://join.slack.com/t/baselimecommunity/shared_invite/zt-1eu7l0ag1-wxYXQV6Fr_aiB3ZPm3LhDQ",
   },
];
---

<nav
   id="header"
   class="z-50 w-full lg:px-72 px-6 flex items-center justify-between lg:justify-around py-4 border-b-1/2 bg-l-g-3 border-l-g-7 gap-12"
>
   <div class="flex items-center flex-none">
      <div class="flex items-center justify-between w-full">
         <a
            href="/"
            aria-current="page"
            class="pb-1 nuxt-link-exact-active nuxt-link-active"
         >
            <span class="sr-only">Baselime</span>
            <img
               src={import.meta.env.BASE_URL + "baselime.svg"}
               alt="logo"
               class="h-6 w-auto sm:h-8"
            />
         </a>
      </div>
   </div>

   <div class="hidden lg:flex items-center gap-8">
      {
         nagivation.map((el) => (
            <div class="text-l-g-10 text-b-md-m border-b border-transparent hover:border-l-g-10 transition cursor-pointer">
               <a href={el.url || el.to}>{el.name}</a>
            </div>
         ))
      }
   </div>

   <div class="hidden md:block text-right">
      <div class="relative">
         <a
            href="https://console.baselime.io"
            class="w-full relative border border-transparent h-full flex items-center justify-center gap-2 transition-all bottom-0 hover:bottom-0.5 backface-hidden py-4 md:py-3 px-8 rounded-xl text-b-md-s bg-l-g-10"
         >
            <div
               class="flex justify-center items-center whitespace-nowrap gap-2 text-l-g-1"
            >
               <div class="v-spinner" style="display:none;">
                  <div
                     class="v-moon v-moon1"
                     style="height:32px;width:32px;border-radius:100%;"
                  >
                     <div
                        class="v-moon v-moon2"
                        style="height:4.571428571428571px;width:4.571428571428571px;border-radius:100%;top:13.714285714285715px;background-color:#000;"
                     >
                     </div>
                     <div
                        class="v-moon v-moon3"
                        style="height:32px;width:32px;border-radius:100%;border:4.571428571428571px solid #000;"
                     >
                     </div>
                  </div>
               </div>
               Start for free
            </div>
         </a>
      </div>
   </div>
</nav>
<script is:inline>
   const debounce = (func, waitFor) => {
      let timeout;

      return (...args) =>
         new Promise((resolve) => {
            if (timeout) {
               clearTimeout(timeout);
            }

            //@ts-ignore
            timeout = setTimeout(() => resolve(func(...args)), waitFor);
         });
   };

   let lastKnownScrollPosition = window.scrollY;
   let ticking = false;
   let isUp = false;
   const header = document.querySelector("#header");
   function doSomething(scrollingUp) {
      if (scrollingUp && header) {
         header.classList.remove("animate-fadeOut");
         header.classList.add("shadow-[0_25px_50px_-12px_rgba(0,0,0,0.3)]");
         header.classList.add("top-0");
         header.classList.add("sticky");
         header.classList.add("animate-fadeIn");
      }

      if (!scrollingUp && header) {
         header.classList.add("animate-fadeOut");
         setTimeout(() => {
            header.classList.remove(
               "shadow-[0_25px_50px_-12px_rgba(0,0,0,0.3)]"
            );
            header.classList.remove("sticky");
            header.classList.remove("animate-fadeIn");
            header.classList.remove("top-0");
         }, 30);
      }
   }

   document.addEventListener("scroll", (event) => {
      isUp = lastKnownScrollPosition > window.scrollY;
      lastKnownScrollPosition = window.scrollY;

      if (!ticking) {
         window.requestAnimationFrame(() => {
            doSomething(isUp);
            ticking = false;
         });

         ticking = true;
      }
   });
</script>
